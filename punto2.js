/*
üìö Proyecto 2: Juego de Adivinanza 

Descripci√≥n 

Crear un juego en consola donde el usuario debe adivinar un n√∫mero generado aleatoriamente por la aplicaci√≥n. 

  

Requisitos Funcionales 

Generar n√∫mero aleatorio: Generar un n√∫mero aleatorio entre 1 y 100. 

Solicitar adivinanzas: Permitir al usuario ingresar adivinanzas. 

Dar pistas: Informar al usuario si su adivinanza es mayor o menor que el n√∫mero generado. 

Contar intentos: Contar el n√∫mero de intentos realizados por el usuario. 

Manejo de Excepciones: Manejar errores como entrada no num√©rica. 

Requisitos T√©cnicos 

Entrada y salida de datos: Utilizar input() y print() en Python, prompt() y console.log() en JavaScript. 

Estructuras de control: Utilizar if, else, while para controlar el flujo del programa. 

Manejo de excepciones: Utilizar try-except en Python, try-catch en JavaScript para manejar errores. 

Generaci√≥n de n√∫meros aleatorios: Utilizar funciones de generaci√≥n de n√∫meros aleatorios. 

Estructura del Proyecto 

main.py o main.js: Punto de entrada del programa. 

Funciones: 

generar_numero(): Funci√≥n para generar un n√∫mero aleatorio. 

adivinar_numero(): Funci√≥n para gestionar el juego de adivinanza. 
*/
const prompt = require('prompt-sync')()
function verificar_numero(numero_verificar) {
    
}
function generar_numero() {
    return Math.floor(Math.random() * (99) + 1) //genera un n√∫mero aleatorio del 1 al 100 con la formula: (maxNumber - minNumber) + minNumber)
}
function adivinar_numero(realNumber) {
    flag=true //una bandera para controlar el ciclo
    let attempts=0; //contador de intentos
    while (flag) { //El ciclo principal de la funci√≥n
        attempts++; // suma los intentos
        let userNumber=prompt("ingresar x n√∫mero") //ingresa los n√∫meros en userNumber
        userNumber==realNumber?flag=false:0; // verifica si adivin√≥ el n√∫mero
        flag==true?(userNumber<realNumber?console.log(`${userNumber} es m√°s peque√±o que el n√∫mero aleatorio`):console.log(`${userNumber} es m√°s grande que el n√∫mero aleatorio`)):0; //verifica si ya se adivin√≥ y luego determina si el n√∫mero es mayor o menor
    }
    console.log(`¬°Felicidades!, has logrado encontrar el n√∫mero ${realNumber} despu√©s de ${attempts} intento/s`) //felicita por encontrar el n√∫mero y muestra la cantidad de intentos 
}
adivinar_numero(generar_numero()) //llama las 2 funciones, el generar_numero y lo envia a la funci√≥n adivinar_numero
